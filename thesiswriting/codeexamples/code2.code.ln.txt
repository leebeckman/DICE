1:	// HELPER METHODS
2:	/* Copy the InputGraph, but remove any edges carrying data which doesn't
3:	 * have the input Variability. */
4:	function pruneToVariability(InputGraph, Variability):
5:	    
6:	/* This function takes a fragmented taint graph as input (one can
7:	 * find nodes such that there is no path between them), and extracts
8:	 * every non-fragmented taint graph from it. */
9:	function getConnectedSubGraphs(InputGraph):
10:	
11:	/* Use the CallGraph data to check the overall execution time for the
12:	 * TaintGraph edges. Return true if the time is over THRESHOLD. */
13:	function checkOverCost(TaintGraph, CallGraph, THRESHOLD):
14:	
15:	/* This uses the CallGraph to determine if the events indicated by
16:	 * edges in Graph cause, through their descendent method calls, any 
17:	 * events in the SideEffectGraph to occur. */
18:	function getSideEffects(Graph, SideEffectGraph, CallGraph):
19:	    Return any edges in SideEffectGraph which were caused by edges
20:		in Graph.
21:	
22:	// EXECUTION START
23:	TG = taint trace graph
24:	CG = call graph, with all calls made during taint trace collection and
25:	    their execution time
26:	
27:	TGPredictable = pruneToVariability(TG, PREDICTABLE)
28:	TGRandom = pruneToVariability(TG, RANDOM)
29:	
30:	PredictableConnectedSubGraphs = getConnectedSubGraphs(TGPredictable)
31:	
32:	foreach PredictableCS in PredictableConnectedSubGraphs:
33:	    if (checkOverCost(PredictableCS, CG, ACCEPT_THRESHOLD)):
34:	        /* Check that the execution of this graph does not result in the
35:	         * flow of non-deterministic data */
36:	        RandomSideEffects = getSideEffects(PredictableCS, TGRandom, CG)
37:	        /* If there are side effects, it may be that they are cheap enough
38:	         * to execute even when fetching from the cache. */
39:	        if (checkOverCost(RandomSideEffects, CG, REJECT_THRESHOLD)):
40:	            continue
41:	        /* Present the graph to the user */
42:	        colorOutputs(PredictableCS)
43:	        colorInputs(PredictableCS)
44:	        showGraphToUser(PredictableCS)
45:	        /* Indicate the side effects, if any, for the user to handle. */
46:	        showSideEffectsToUser(RandomSideEffects)