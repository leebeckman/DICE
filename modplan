Mods

-taintdata

PUSH ON STACK

-before method
    -check stack data to see if last method (pop-peek) is in scan mode (acquired taint somehow), boolean check
        -if so scan the args, if taint found log it, and set stack data (peek) to indicate that this method is in scan mode

-during method
    -static read
        -static read might be followed by nested static reads, followed by non-static reads. Non-static doesn't matter, original static will pick it up
            however, multiple nested static will cause redundant scanning, can detect and cache.
        -scan the read, if tainted set stack data (peek) to be in scan mode
    -object field set
        -object either sets a post argument, or returned
            -in this case only care about taint, so see if there is taint source and don't worry about it, other scans will get it.
        -or stored statically (or stored in java.*)
            -could be static complex tainted object stored in a static comlex object... static object is scanned, log tainting the static receiver.
            -if source is not static, see if current (peek) is in taint mode, and only scan if so
    -post argument propagation
        

-after method
    -check stack data to see if this method (peek) is in scan mode
        -if so, scan return, if taint found, log it, and set stack data of calling (pop-peek) to be in scan mode
    -also, if in scan mode and there were arguments ( size > 0), post scan arguments, if tainted (log it somehow if new) set stack data of calling (pop-peep) 
    to be in scan mode

POP FROM STACK

scan cache would be useful here, at least from stack on to stack off
